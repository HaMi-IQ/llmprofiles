name: Profile Change Detection

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/v*/index.jsonld'
      - '**/v*/*.schema.json'
      - '**/v*/examples/**'
      - '**/v*/training.jsonl'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/v*/index.jsonld'
      - '**/v*/*.schema.json'
      - '**/v*/examples/**'
      - '**/v*/training.jsonl'

env:
  NODE_VERSION: '20'

jobs:
  detect-changes:
    name: Detect Profile Changes
    runs-on: ubuntu-latest
    outputs:
      profiles-changed: ${{ steps.changes.outputs.profiles }}
      change-summary: ${{ steps.changes.outputs.summary }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Detect Profile Changes
        id: changes
        run: |
          # Get the base commit for comparison
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_COMMIT="${{ github.event.pull_request.base.sha }}"
          else
            BASE_COMMIT="${{ github.event.before }}"
          fi
          
          if [ -z "$BASE_COMMIT" ] || [ "$BASE_COMMIT" = "0000000000000000000000000000000000000000" ]; then
            BASE_COMMIT="HEAD~1"
          fi
          
          echo "Comparing changes from $BASE_COMMIT to ${{ github.sha }}"
          
          # Get list of changed profile files
          CHANGED_FILES=$(git diff --name-only $BASE_COMMIT ${{ github.sha }} | grep -E '^profiles/[^/]+/[^/]+/v\d+/' || true)
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No profile changes detected"
            echo "profiles=" >> $GITHUB_OUTPUT
            echo "summary=No profile changes detected" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Extract profile types and categorize changes
          PROFILES_CHANGED=()
          SCHEMA_CHANGES=()
          EXAMPLE_CHANGES=()
          TRAINING_CHANGES=()
          
          while IFS= read -r file; do
            if [[ $file =~ ^profiles/[^/]+/([^/]+)/v[0-9]+/ ]]; then
              PROFILE_TYPE="${BASH_REMATCH[1]}"
              PROFILES_CHANGED+=("$PROFILE_TYPE")
              
              if [[ $file =~ \.schema\.json$ ]]; then
                SCHEMA_CHANGES+=("$PROFILE_TYPE")
              elif [[ $file =~ /examples/ ]]; then
                EXAMPLE_CHANGES+=("$PROFILE_TYPE")
              elif [[ $file =~ training\.jsonl$ ]]; then
                TRAINING_CHANGES+=("$PROFILE_TYPE")
              fi
            fi
          done <<< "$CHANGED_FILES"
          
          # Remove duplicates and create summary
          UNIQUE_PROFILES=($(printf "%s\n" "${PROFILES_CHANGED[@]}" | sort -u))
          UNIQUE_SCHEMAS=($(printf "%s\n" "${SCHEMA_CHANGES[@]}" | sort -u))
          UNIQUE_EXAMPLES=($(printf "%s\n" "${EXAMPLE_CHANGES[@]}" | sort -u))
          UNIQUE_TRAINING=($(printf "%s\n" "${TRAINING_CHANGES[@]}" | sort -u))
          
          # Create change summary
          SUMMARY="Profiles modified: ${#UNIQUE_PROFILES[@]}"
          if [ ${#UNIQUE_SCHEMAS[@]} -gt 0 ]; then
            SUMMARY="$SUMMARY, Schemas updated: ${#UNIQUE_SCHEMAS[@]}"
          fi
          if [ ${#UNIQUE_EXAMPLES[@]} -gt 0 ]; then
            SUMMARY="$SUMMARY, Examples updated: ${#UNIQUE_EXAMPLES[@]}"
          fi
          if [ ${#UNIQUE_TRAINING[@]} -gt 0 ]; then
            SUMMARY="$SUMMARY, Training updated: ${#UNIQUE_TRAINING[@]}"
          fi
          
          # Output results
          echo "profiles=${UNIQUE_PROFILES[*]}" >> $GITHUB_OUTPUT
          echo "summary=$SUMMARY" >> $GITHUB_OUTPUT
          
          # Log summary
          echo "📊 Change Summary: $SUMMARY"
          echo "📁 Profiles: ${UNIQUE_PROFILES[*]}"
          if [ ${#UNIQUE_SCHEMAS[@]} -gt 0 ]; then
            echo "🔧 Schema updates: ${UNIQUE_SCHEMAS[*]}"
          fi
          if [ ${#UNIQUE_EXAMPLES[@]} -gt 0 ]; then
            echo "💡 Example updates: ${UNIQUE_EXAMPLES[*]}"
          fi
          if [ ${#UNIQUE_TRAINING[@]} -gt 0 ]; then
            echo "🎯 Training updates: ${UNIQUE_TRAINING[*]}"
          fi

  validate-changes:
    name: Validate Profile Changes
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.profiles-changed != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Validate Changed Profiles
        run: |
          PROFILES="${{ needs.detect-changes.outputs.profiles-changed }}"
          echo "Validating profiles: $PROFILES"
          
          # Run validation for changed profiles
          npm run validate
          
          echo "✅ All profile changes validated successfully"
          
      - name: Test Profile Endpoints
        run: |
          PROFILES="${{ needs.detect-changes.outputs.profiles-changed }}"
          echo "Testing endpoints for profiles: $PROFILES"
          
          # Test well-known endpoints
          npm run test-well-known
          
          echo "✅ Profile endpoints tested successfully"

  update-documentation:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: [detect-changes, validate-changes]
    if: needs.detect-changes.outputs.profiles-changed != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Update Profile READMEs
        run: |
          PROFILES="${{ needs.detect-changes.outputs.profiles-changed }}"
          echo "Updating READMEs for profiles: $PROFILES"
          
          # Update READMEs for changed profiles
          npm run create-readmes
          
          echo "✅ Profile READMEs updated"
          
      - name: Regenerate API Documentation
        run: |
          echo "Regenerating API documentation..."
          npm run generate-api
          
          echo "✅ API documentation regenerated"
          
      - name: Commit Documentation Updates
        if: github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if git diff --quiet; then
            echo "No documentation changes to commit"
          else
            git add .
            git commit -m "docs: update documentation for profile changes - ${{ needs.detect-changes.outputs.change-summary }}"
            git push origin ${{ github.ref }}
          fi

  notify-changes:
    name: Notify Profile Changes
    runs-on: ubuntu-latest
    needs: [detect-changes, validate-changes, update-documentation]
    if: always()
    steps:
      - name: Notify Success
        if: success()
        run: |
          echo "✅ Profile changes processed successfully!"
          echo "📊 ${{ needs.detect-changes.outputs.change-summary }}"
          echo "📁 Profiles: ${{ needs.detect-changes.outputs.profiles-changed }}"
          
      - name: Notify Failure
        if: failure()
        run: |
          echo "❌ Profile change processing failed!"
          echo "Please check the logs for details"
          
      - name: Create Issue for Major Changes
        if: success() && contains(needs.detect-changes.outputs.profiles-changed, 'schema')
        uses: actions/github-script@v7
        with:
          script: |
            const profiles = '${{ needs.detect-changes.outputs.profiles-changed }}'.split(' ');
            const schemaProfiles = profiles.filter(p => p.includes('schema'));
            
            if (schemaProfiles.length > 0) {
              const title = `Schema Changes Detected - ${schemaProfiles.join(', ')}`;
              const body = `## Schema Changes Detected

The following profiles have schema changes that may require attention:

${schemaProfiles.map(p => `- **${p}**: Schema validation rules updated`).join('\n')}

### Change Summary
${{ needs.detect-changes.outputs.change-summary }}

### Action Required
Please review these schema changes to ensure:
- Backward compatibility is maintained
- Validation rules are appropriate
- Documentation is updated accordingly

### Related Commits
- Commit: ${{ github.sha }}
- Author: ${{ github.actor }}
- Branch: ${{ github.ref }}

---
*This issue was automatically created by the Profile Change Detection workflow*`;

              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['schema-change', 'automated', 'needs-review']
              });
            }
