{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "VideoObject Extracted Content",
  "description": "JSON Schema for validating extracted VideoObject content for RAG/AI applications",
  "type": "object",
  "required": ["video"],
  "properties": {
    "video": {
      "type": "object",
      "required": ["name", "description", "uploadDate"],
      "properties": {
        "name": {
          "type": "string",
          "description": "The title of the video"
        },
        "description": {
          "type": "string",
          "description": "A description of the video content"
        },
        "uploadDate": {
          "type": "string",
          "description": "Date when the video was uploaded"
        },
        "datePublished": {
          "type": "string",
          "description": "Date when the video was published"
        },
        "duration": {
          "type": "string",
          "description": "Duration of the video in human-readable format"
        },
        "author": {
          "type": "string",
          "description": "The author or creator of the video"
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the video"
        },
        "genre": {
          "type": "string",
          "description": "Genre of the video content"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Keywords describing the video content"
          }
        },
        "language": {
          "type": "string",
          "description": "Language of the video content"
        },
        "transcript": {
          "type": "string",
          "description": "Full transcript of the video content"
        },
        "captions": {
          "type": "string",
          "description": "Caption or subtitle text for the video"
        },
        "thumbnail": {
          "type": "string",
          "description": "URL to the video thumbnail image"
        },
        "contentUrl": {
          "type": "string",
          "description": "URL to the video file"
        },
        "embedUrl": {
          "type": "string",
          "description": "URL for embedding the video"
        },
        "quality": {
          "type": "object",
          "properties": {
            "width": {
              "type": "integer",
              "description": "Width of the video in pixels"
            },
            "height": {
              "type": "integer",
              "description": "Height of the video in pixels"
            },
            "format": {
              "type": "string",
              "description": "Video encoding format"
            },
            "bitrate": {
              "type": "string",
              "description": "Bitrate of the video"
            }
          }
        },
        "interactions": {
          "type": "object",
          "properties": {
            "views": {
              "type": "integer",
              "description": "Number of video views"
            },
            "likes": {
              "type": "integer",
              "description": "Number of likes"
            },
            "shares": {
              "type": "integer",
              "description": "Number of shares"
            }
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Additional tags or categories"
          }
        }
      }
    },
    "metadata": {
      "type": "object",
      "properties": {
        "extractedAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the content was extracted"
        },
        "sourceUrl": {
          "type": "string",
          "format": "uri",
          "description": "Source URL of the video"
        },
        "profileVersion": {
          "type": "string",
          "const": "videoobject.v1",
          "description": "LLM Profile version used"
        }
      }
    }
  },
  "additionalProperties": false
}
